https://github.com/NataliSrtkn/modul_28

Финальное тестовое задание для студентов курса. Написание автоматизированных тестов с использованием PyTest и Selenium для формы автоизации личного кабинета сайта Ростелеком.
https://chromedriver.chromium.org/downloads - скачать версию Selenium WebDriver, совместимую с вашим браузером (тесты проводились в браузере Chrome)
Команда для запуска тестов
python3 -m pytest -v --driver Chrome --driver-path ${PATH_TO_DRIVER} autotests_rostelecom.py
Где ${PATH_TO_DRIVER} находится путь к драйверу Selenium для текущей ОС


https://github.com/Konstantin1K/modul-28.1
По заданию тестирования необходимо: Протестировать требования. Разработать тест-кейсы (не менее 15). 
Необходимо применить несколько техник тест-дизайна. Провести автоматизированное тестирование продукта (не менее 15 автотестов). 
Заказчик ожидает по одному автотесту на каждый написанный тест-кейс. Оформите свой набор автотестов в GitHub. Оформить описание обнаруженных дефектов.
 Во время обучения вы работали с разными сервисами и шаблонами, используйте их для оформления тест-кейсов и обнаруженных дефектов 
(если дефекты не будут обнаружены, то составить описание трех дефектов). Тест-кейсы и баг-репорты по ссылке:
 https://docs.google.com/spreadsheets/d/1YSQlian0P6RYAuDNdMmjb3ZDGeVVZ9NV5AvyLTPb0ig/edit?usp=sharing. 
Проект выполнен с помощью библиотек Pytest и Selenium. Все тесты находятся в папке tests, файл test_rostelecom.py. 
Так же в папке tests находится файл consts, содержащий тестовые данные и локаторы.
При тестировании применялись такие техники тест-дизайна как: Проверка граничных значений, эквивалентное разделение, предугадывание ошибки,
 исследовательское тестирование. Сценарии работы автотестов: Несколько тестов проверяют редирект по клику на страницы:
 Регистрация нового пользователя, Восстановление пароля, Пользователького соглашения, авторизации при помощи VK аккаунта, 
авторизации при помощи OK аккаунта, авторизации при помощи Mail аккаунта, авторизации при помощи Google аккаунта, авторизации при помощи Yandex аккаунта.
Проверка корректного изменения поля ввода логина в соответствии с выбранным табом. Корректно проходит валидация типа логина 
(мобильный телефон, почта, логин, личный счёт) в автоматическом режиме. 
Несколько тестов проверяющих появления ошибок при некорректном вводе данных на странице Регистрации. 
На странице Восстановления пароля проверены обновление капчи и работоспособность кнопки Вернуться назад. 
Для работы автотестов необходимы библиотеки Pytest и Selenium. 
В проекте присутствует webdriver Selenium для Chrome 109 версии, что облегчает запуск тестов.